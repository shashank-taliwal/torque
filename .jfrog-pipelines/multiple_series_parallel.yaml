resources:
  - name: connect_too_many_steps_test
    type: PropertyBag
    configuration:
      commitSha: 1
      runID: 1

  - name: res_output_test
    type: PropertyBag
    configuration:
      test: ""

  - name: res_output_step
    type: PropertyBag
    configuration:
      test: ""

  - name: res_output_step2
    type: PropertyBag
    configuration:
      test: ""
pipelines:
  - name: DifferentAffinityGroupInSamePipelineMultiParallelAndSimpleSteps
    configuration:
      environmentVariables:
        readOnly:
          TEST_ENV: "pipelines"
          JUST_FES: "options"
          LOL_FOO: "test"
    steps:
      - name: oneCol_step1_ag1
        type: Bash
        configuration:
          runtime:
            type: image
            image:
              auto:
                language: node
                versions:
                  - "16"
          environmentVariables:
            key1: "value1"
            key2: "value2"
            key3: "value3"
          affinityGroup: ag_group1
        execution:
          onExecute:
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $key1 != "value1" ]; then echo "key1-$key1 is from step section"; return 1; fi
            - if [ $key2 != "value2" ]; then echo "key2-$key2 is from step section"; return 1; fi
            - if [ $key3 != "value3" ]; then echo "key3-$key3 is from step section"; return 1; fi
            - add_run_variables agroup1=$step_node_name
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: twoCol_step1_ag1
        type: Bash
        configuration:
          runtime:
            type: image
            image:
              auto:
                language: java
                versions:
                  - "11"
          affinityGroup: ag_group1
          inputSteps:
            - name: oneCol_step1_ag1
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $agroup1 != $step_node_name ]; then echo "Step didnt run on same node in an affinity group"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: twoCol_step2_ag1
        type: Bash
        configuration:
          runtime:
            type: image
            image:
              auto:
                language: java
                versions:
                  - "17"
          inputSteps:
            - name: oneCol_step1_ag1
          outputResources:
            - name: res_output_test
          affinityGroup: ag_group1
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $agroup1 != $step_node_name ]; then echo "Step didnt run on same node in an affinity group"; return 1; fi
            - write_output res_output_test test=$commitSha runID=$current_runid
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: twoCol_step3_ag1
        type: Bash
        configuration:
          inputSteps:
            - name: oneCol_step1_ag1
          affinityGroup: ag_group1
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $agroup1 != $step_node_name ]; then echo "Step didnt run on same node in an affinity group"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: twoCol_step4_noAG
        type: Bash
        configuration:
          inputSteps:
            - name: oneCol_step1_ag1
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: twoCol_step5_noAG
        type: Bash
        configuration:
          environmentVariables:
            envOverride: "valueToBeOverridenInNextStepEnv"
            noOverride: "stepVariable"
            stepOverride: "valueToBeOverridenInNextStepNotInEnv"
          inputSteps:
            - name: oneCol_step1_ag1
          outputResources:
            - name: res_output_step
        execution:
          onExecute:
            - printenv
            - write_output res_output_step test=$commitSha runID=$current_runid
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $envOverride != "valueToBeOverridenInNextStepEnv" ]; then echo "envOverride-$envOverride is from step section"; return 1; fi
            - if [ $stepOverride != "valueToBeOverridenInNextStepNotInEnv" ]; then echo "stepOverride-$stepOverride is from step section"; return 1; fi
            - if [ $noOverride != "stepVariable" ]; then echo "noOverride-$noOverride is from step section"; return 1; fi
            - add_run_variables runEnvOverride="runValueToBeOverridenInNextStepEnv"
            - add_run_variables runStepOverride="runValueToBeOverridenInNextStepNotInEnv"
            - add_run_variables runNoOverride="runStepVariable"
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: joker_between_twoAndThreeCol_ag4
        type: Bash
        configuration:
          affinityGroup: ag_group4
          environmentVariables:
            envOverride: "valueoverridenInEnvSection"
          outputResources:
            - name: res_output_step2
          inputResources:
            - name: res_output_step
        execution:
          onExecute:
            - if [ $stepOverride != "valueToBeOverridenInNextStepNotInEnv" ]; then echo "stepOverride-$stepOverride is from step section"; return 1; fi
            - stepOverride="valueoverridenInStepExecutionSection"
            - printenv
            - write_output res_output_step2 test=$commitSha runID=$current_runid
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $envOverride != "valueoverridenInEnvSection" ]; then echo "envOverride-$envOverride is not overriden from step env section"; return 1; fi
            - if [ $stepOverride != "valueoverridenInStepExecutionSection" ]; then echo "stepOverride-$stepOverride is not overriden from step section"; return 1; fi
            - if [ $noOverride != "stepVariable" ]; then echo "noOverride-$noOverride is from step section"; return 1; fi
            - runStepOverride="runValueoverridenInStepExecutionSection"
            - if [ $runEnvOverride != "runValueToBeOverridenInNextStepEnv" ]; then echo "runEnvOverride-$runEnvOverride is not overriden from step env section"; return 1; fi
            - if [ $runStepOverride != "runValueoverridenInStepExecutionSection" ]; then echo "runStepOverride-$runStepOverride is not overriden from step section"; return 1; fi
            - if [ $runNoOverride != "runStepVariable" ]; then echo "runNoOverride-$runNoOverride is from step section"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: threeCol_step1_ag2
        type: Bash
        configuration:
          inputResources:
            - name: res_output_test
          affinityGroup: ag_group2
          priority: 1
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - add_run_variables agroup2=$step_node_name
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: threeCol_step2_ag2
        type: Bash
        configuration:
          inputResources:
            - name: res_output_test
          affinityGroup: ag_group2
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $agroup2 != $step_node_name ]; then echo "Step didnt run on same node in an affinity group"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: threeCol_step3_noAG
        type: Bash
        configuration:
          inputResources:
            - name: res_output_test
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: threeCol_step4_ag4
        type: Bash
        configuration:
          affinityGroup: ag_group4
          inputResources:
            - name: res_output_step
            - name: res_output_step2
        execution:
          onExecute:
            - printenv
            - if [ $res_res_output_step_runID != "$current_runid" ]; then echo "res_res_output_step_runID-$res_res_output_step_runID is from output resource"; return 1; fi
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $envOverride != "valueoverridenInEnvSection" ]; then echo "envOverride-$envOverride is not overriden from step env section"; return 1; fi
            - if [ $stepOverride != "valueoverridenInStepExecutionSection" ]; then echo "stepOverride-$stepOverride is not overriden from step section"; return 1; fi
            - if [ $noOverride != "stepVariable" ]; then echo "noOverride-$noOverride is from step section"; return 1; fi
            - if [ $runEnvOverride != "runValueToBeOverridenInNextStepEnv" ]; then echo "runEnvOverride-$runEnvOverride is not overriden from step env section"; return 1; fi
            - if [ $runStepOverride != "runValueToBeOverridenInNextStepNotInEnv" ]; then echo "runStepOverride-$runStepOverride is not overriding from previous step level env but it should still hold original value"; return 1; fi
            - if [ $runNoOverride != "runStepVariable" ]; then echo "runNoOverride-$runNoOverride is from step section"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: fourCol_step1_ag2
        type: Bash
        configuration:
          inputResources:
            - name: connect_too_many_steps_test
          inputSteps:
            - name: threeCol_step1_ag2
            - name: threeCol_step2_ag2
          affinityGroup: ag_group2
        execution:
          onExecute:
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $agroup2 != $step_node_name ]; then echo "Step didnt run on same node in an affinity group"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: fiveCol_step1_ag3
        type: Bash
        configuration:
          inputResources:
            - name: connect_too_many_steps_test
          inputSteps:
            - name: fourCol_step1_ag2
          affinityGroup: ag_group3
        execution:
          onExecute:
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - add_run_variables agroup3=$step_node_name
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: sixCol_step1_ag3
        type: Bash
        configuration:
          inputResources:
            - name: connect_too_many_steps_test
          inputSteps:
            - name: fiveCol_step1_ag3
          affinityGroup: ag_group3
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $agroup3 != $step_node_name ]; then echo "Step didnt run on same node in an affinity group"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: sixCol_step2_noAG
        type: Bash
        configuration:
          inputSteps:
            - name: fiveCol_step1_ag3
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: sixCol_step3_noAG
        type: Bash
        configuration:
          inputSteps:
            - name: fiveCol_step1_ag3
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: sixCol_step4_noAG
        type: Bash
        configuration:
          inputSteps:
            - name: fiveCol_step1_ag3
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: sixCol_step5_noAG
        type: Bash
        configuration:
          inputSteps:
            - name: fiveCol_step1_ag3
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name

      - name: sevenCol_step1_ag3
        type: Bash
        configuration:
          inputResources:
            - name: connect_too_many_steps_test
          inputSteps:
            - name: sixCol_step1_ag3
          affinityGroup: ag_group3
        execution:
          onExecute:
            - printenv
            - if [ $TEST_ENV != "pipelines" ]; then echo "TEST_ENV-$TEST_ENV is from pipeline section readonly"; return 1; fi
            - if [ $JUST_FES != "options" ]; then echo "JUST_FES-$JUST_FES is from pipeline section readonly"; return 1; fi
            - if [ $LOL_FOO != "test" ]; then echo "LOL_FOO-$LOL_FOO is from pipeline section readonly"; return 1; fi
            - if [ $agroup3 != $step_node_name ]; then echo "Step didnt run on same node in an affinity group"; return 1; fi
            - echo stepNodeId=$step_node_id stepNodeName=$step_node_name
